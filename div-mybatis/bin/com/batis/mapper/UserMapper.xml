<?xml version="1.0" encoding="UTF-8" ?>
<mapper namespace="com.batis.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="com.batis.po.User">
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="user_name" property="userName"
			jdbcType="VARCHAR" />
		<result column="password" property="password"
			jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
	</resultMap>

	<select id="list" resultMap="BaseResultMap">
		select
		user_id, user_name, password, phone
		from user
	</select>

	<select id="listCondition1" resultMap="BaseResultMap"
		parameterType="java.lang.String" alias="param">
		select
		user_id, user_name, password, phone
		from user 
		WHERE 1=1
		<if test="param != nil">
			AND user_name LIKE CONCAT('%',#{userName,jdbcType=VARCHAR},'%')
		</if>
	</select>
	
	<select id="listCondition2" resultMap="BaseResultMap"
		parameterType="com.batis.po.User" alias="user">
		select
		user_id, user_name, password, phone
		from user  
		WHERE 1=1
		<if test="user.userName != nil">
			AND user_name LIKE CONCAT('%',#{userName,jdbcType=VARCHAR},'%')
		</if>
		<if test="user.phone != nil">
			AND phone=#{phone,jdbcType=VARCHAR}
		</if>
	</select>
	
	<select id="queryCondition3" resultMap="BaseResultMap"
		parameterType="java.util.Map" alias="param">
		select
		user_id, user_name, password, phone
		from user
		WHERE 1=1
		<if test="param.userName != nil">
			AND user_name LIKE CONCAT('%',#{userName,jdbcType=VARCHAR},'%')
		</if>
		<if test="param.phone != nil">
			AND phone=#{phone,jdbcType=VARCHAR}
		</if>
	</select>
	
	<select id="queryCondition4" resultMap="BaseResultMap"
		parameterType="java.util.Map" alias="param">
		select
		user_id, user_name, password, phone
		from user
	  <where>
		 <choose>
		    <when test="param.userName != nil">
		      AND user_name LIKE CONCAT('%',#{userName,jdbcType=VARCHAR},'%')
		    </when>
		    <otherwise>
		      AND user_id= 1
		    </otherwise>
	     </choose>
      </where>
	</select>
	
	<select id="queryCondition5" resultMap="BaseResultMap"
		parameterType="java.util.Map" alias="param">
		select
		user_id, user_name, password, phone
		from user
		<where>
	         <if test="param.userName != nil">
				AND user_name LIKE CONCAT('%',#{userName,jdbcType=VARCHAR},'%')
			 </if>
			 <if test="param.phone != nil">
				AND phone=#{phone,jdbcType=VARCHAR}
			 </if>
	     </where>
	</select>
	
	<select id="queryCondition6" resultMap="BaseResultMap"
		parameterType="java.util.Map" alias="param">
		select
		user_id, user_name, password, phone
		from user
		<where> 
		   and user_id IN
		   <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
	        #{id}
	       </foreach>
       </where>
	</select>
	
	<delete id="delete" parameterType="java.lang.Integer">
		delete from user
		where user_id = #{userId,jdbcType=INTEGER}
	</delete>
	
	<insert id="save" parameterType="com.batis.po.User">
		insert into user (user_name, password,
		phone)
		values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR})
	</insert>

    <update id="update" parameterType="com.batis.po.User">
		update user
		set user_name = #{userName,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR}
		where user_id = #{userId,jdbcType=INTEGER}
	</update>

	<update id="updateCondition" parameterType="com.batis.po.User" alias="param">
		update user
		<set>
           <if test="param.userName != nil">
               user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="param.password != nil">
               password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="param.phone != nil">
               phone = #{phone,jdbcType=VARCHAR},
            </if>
        </set>
        <where> 
           <if test="param.userId != nil">
               user_id = #{userId,jdbcType=INTEGER}
           </if>
        </where>
	</update>
</mapper>